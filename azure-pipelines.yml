# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: SonarCloudPrepare@1
  displayName: 'SonarCloud Preparation'
  inputs:
    SonarCloud: 'MarathonSonar'
    organization: $(SONAR_ORG)
    scannerMode: 'MSBuild'
    projectKey: $(SONAR_PROJECT)
    projectName: $(SONAR_PROJECT)
- task: Maven@3
  displayName: 'Marathon Maven Build & Test'
  inputs:
    mavenPomFile: 'ProjectManagementAPI/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'
    goals: 'sonar:sonar'

- task: SonarCloudPublish@1
  displayName:  'Sonar Quality Gate'
  inputs:
    pollingTimeoutSec: $(SONARGATE_TIMEOUT)

- task: Docker@2
  displayName: 'Marathon Docker'
  inputs:
    containerRegistry: 'MarathonDockerHub'
    repository: $(MARATHON_IMAGE)
    command: 'buildAndPush'
    tags: |
      $(Build.BuildId)
      latest
    Dockerfile: 'ProjectManagementAPI/Dockerfile' 
- task: Maven@3
  displayName: 'Email API Maven Build'
  inputs:
    mavenPomFile: 'Email2/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- task: Docker@2
  displayName: 'Email API Docker'
  inputs:
    containerRegistry: 'MarathonDockerHub'
    repository: $(EMAIL_IMAGE)
    command: 'buildAndPush'
    tags: |
      $(Build.BuildId)
      latest
    Dockerfile: 'Email2/Dockerfile'

$(DISCORD_ALERT)