# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: SonarCloudPrepare@1
  displayName: 'SonarCloud Preparation'
  inputs:
    SonarCloud: 'MarathonSonar'
    organization: $(SONAR_ORG)
    scannerMode: 'MSBuild'
    projectKey: $(SONAR_PROJECT)
    projectName: $(SONAR_PROJECT)
- task: Maven@3
  displayName: 'Marathon Maven'
  inputs:
    mavenPomFile: 'ProjectManagementAPI/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'
    goals: 'sonar:sonar'

- task: Maven@3
  displayName: 'Email API Maven'
  inputs:
    mavenPomFile: 'Email2/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: SonarCloudPublish@1
  displayName:  'Sonar Quality Gate'
  inputs:
    pollingTimeoutSec: $(SONARGATE_TIMEOUT)

- task: Docker@2
  displayName: 'Marathon Docker'
  inputs:
    containerRegistry: 'MarathonDockerHub'
    repository: $(MARATHON_IMAGE)
    command: 'buildAndPush'
    tags: |
      $(Build.BuildId)
      latest
    Dockerfile: 'ProjectManagementAPI/Dockerfile' 

- task: Docker@2
  displayName: 'Email API Docker'
  inputs:
    containerRegistry: 'MarathonDockerHub'
    repository: $(EMAIL_IMAGE)
    command: 'buildAndPush'
    tags: |
      $(Build.BuildId)
      latest
    Dockerfile: 'Email2/Dockerfile'

- task: KubernetesManifest@0
  displayName: "Deploy Marathon to AKS"
  inputs:
    action: 'deploy'
    kubernetesServiceConnection: 'MarathonCluster'
    namespace: 'default'
    manifests: 'ProjectManagementAPI/k8s/pm-api-deployment.yml'
    containers: |
      revtrainingacr.azurecr.io/project-management-api:latest

- task: KubernetesManifest@0
  displayName: "Deploy Email API to AKS"
  inputs:
    action: 'deploy'
    kubernetesServiceConnection: 'MarathonCluster'
    namespace: 'default'
    manifests: 'ProjectManagementAPI/k8s/email-api-deployment.yml'
    containers: |
      revtrainingacr.azurecr.io/email-api:latest

#- task: ado-discord-webhook@1
#  inputs:
#    channelId: $(DISCORD_CHANNEL)
#    webhookKey: $(DISCORD_WEBHOOK)
#    name: 'Azure DevOps'
#    avatar: 'https://p2zk82o7hr3yb6ge7gzxx4ki-wpengine.netdna-ssl.com/wp-content/uploads/Azure-DevOps-3.png'
#    messageType: 'content'
#    content: 'Build Update for CM-MARATHON-PM: https://dev.azure.com/revature-training-uta/cm-marathon-pm/_build'